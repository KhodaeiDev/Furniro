{
  "openapi": "3.0.0",
  "info": {
    "title": "< furniro - Shop APIS ‚ù§Ô∏èüíª >",
    "description": "",
    "version": "1.0.0"
  },

  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "User token for authentication: **Bearer [user_token]**"
      }
    }
  },

  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth üîê"],
        "summary": "For User Register",
        "description": "User rigister routes",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullname": {
                    "type": "string",
                    "example": "mehranKhodaei"
                  },
                  "email": {
                    "type": "string",
                    "example": "khodaei.dev@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "@Mehran1212"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "example": "@Mehran1212"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success Register User, (Returned AccessToken and RefreshToken)  and Saved Refreshtoken in Cookies",
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                  "AccessToken-expiresIn": "14 minute",
                  "refreshToken": "dcbdc-kjcjdsc-cjdc-sjjdsc",
                  "RefreshToken-expiresIn": "7 day",
                  "user": {
                    "_id": "37266829r8ucuef327",
                    "fullname": "mehran",
                    "role": "USER",
                    "email": "example@gmail.com",
                    "__v": 0
                  }
                }
              }
            }
          },
          "401": {
            "description": "Email Already exist"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth üîê"],
        "summary": "For User Login",
        "description": "For User Login with email and paassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "khodaei.dev@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "@Mehran1212"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "user logged in successfully ,(Returned AccessToken and refreshToken) and Saved Refreshtoken in Cookies",
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                  "AccessToken-expiresIn": "14 minute",
                  "refreshToken": "dcbdc-kjcjdsc-cjdc-sjjdsc",
                  "RefreshToken-expiresIn": "7 day",
                  "user": {
                    "_id": "37266829r8ucuef327",
                    "fullname": "mehran",
                    "role": "USER",
                    "email": "example@gmail.com",
                    "__v": 0
                  }
                }
              }
            }
          },
          "403": {
            "description": "Invalid Data (Email Or Password)"
          }
        }
      }
    },

    "/auth/refresh": {
      "post": {
        "summary": "Get New Access Token",
        "description": "Retrieves a new access token using the refresh token stored in cookies.",
        "operationId": "getNewAccessToken",
        "tags": ["Auth üîê"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "example": "djhdi-dehdhi-ajeucm-alcsaxclamxj"
                  }
                },
                "required": ["refreshToken"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New access and Refreshtoken generated successfully.",
            "content": {
              "application/json": {
                "example": {
                  "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                  "AccessToken-expiresIn": "14 minute",
                  "refreshToken": "dcbdc-kjcjdsc-cjdc-sjjdsc",
                  "RefreshToken-expiresIn": "7 day"
                }
              }
            }
          },
          "401": {
            "description": "Refresh token not provided or invalid."
          },
          "404": {
            "description": "User not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },

    "/auth/me": {
      "get": {
        "summary": "Get Authenticated User Information",
        "description": "Returns information about the currently authenticated user.",
        "tags": ["Auth üîê"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User information retrieved successfully.",
            "content": {
              "application/json": {
                "example": {
                  "user": {
                    "_id": "37266829r8ucuef327",
                    "fullname": "mehran",
                    "role": "USER",
                    "email": "example@gmail.com",
                    "__v": 0
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Token not found or invalid.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized !! - token Not Found"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Token expired.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized !! Token Expired"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "example": {
                  "message": "User Not found"
                }
              }
            }
          }
        }
      }
    },

    "/auth/getCode": {
      "post": {
        "summary": "Request Reset Password Code",
        "description": "Generates a reset password code and sends it to the provided email address.",
        "tags": ["Auth üîê"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "khodaei.dev@gmail.com"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset password code sent successfully."
          },
          "404": {
            "description": "Email not valid."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },

    "/auth/verifyCode": {
      "post": {
        "summary": "Verify Reset Password Code",
        "description": "Verifies the reset password code sent to the user's email and generates a token if successful.",
        "tags": ["Auth üîê"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "khodaei.dev@gmail.com"
                  },
                  "code": {
                    "type": "string",
                    "example": "12345"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Code verified successfully, returns a user token."
          },
          "400": {
            "description": "The entered code is not correct."
          },
          "403": {
            "description": "The code has expired, please request a new one."
          },
          "404": {
            "description": "Email not valid."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/auth/reset-password/{token}": {
      "post": {
        "summary": "Reset Password",
        "description": "Resets the user's password using a valid reset token.",
        "tags": ["Auth üîê"],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "description": "The reset password token.",
            "schema": {
              "type": "string",
              "example": "a1b2c3d4e5f6g7h8i9j0"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "example": "newStrongPassword123!"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "example": "newStrongPassword123!"
                  }
                },
                "required": ["password", "confirmPassword"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password updated successfully."
          },
          "403": {
            "description": "Invalid token or User not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/auth/log-out": {
      "post": {
        "summary": "User Logout",
        "description": "Logs out a user by deleting the provided refresh token.",
        "tags": ["Auth üîê"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Refresh token to be invalidated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "example": "your_refresh_token_here"
                  }
                },
                "required": ["refreshToken"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful logout"
          },
          "400": {
            "description": "refreshToken dont Receive from Body"
          },
          "403": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User Not Found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },

    "/category/": {
      "post": {
        "summary": "Create a new category",
        "description": "Creates a new category if the title or href does not already exist.",
        "tags": ["Admin Dashboard üìà"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string", "example": "sofas" },
                  "href": { "type": "string", "example": "sofas" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully."
          },
          "400": {
            "description": "Category title or href already exists."
          },
          "401": {
            "description": "Forbidden. Only admins can access this route"
          },
          "404": {
            "description": "User Not found - Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all categories",
        "description": "Returns a list of all categories.",
        "tags": ["Category üìÇ"],
        "responses": {
          "200": {
            "description": "List of categories retrieved successfully.",
            "content": {
              "application/json": {
                "example": {
                  "categories": [
                    {
                      "_id": "23dsfbgngrngnh446gnry6fh65",
                      "title": "test",
                      "href": "test"
                    },
                    {
                      "_id": "456287ds45236hg45",
                      "title": "test1",
                      "href": "test1"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "No categories found."
          }
        }
      }
    },
    "/category/{categoryId}": {
      "delete": {
        "summary": "Remove a category",
        "description": "Deletes a category by its ID. Requires admin privileges.",
        "tags": ["Admin Dashboard üìà"],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "description": "ID of the category to delete",
            "schema": {
              "type": "string",
              "example": "60f7f0b8f1a2c3d4e5f67890"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Category removed successfully.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Category Removed successfully"
                }
              }
            }
          },
          "400": {
            "description": "Invalid category ID format.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Category ObjectId not valid !!"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Token not provided or invalid.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized !! - token Not Found"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin privileges required.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Forbidden - Admin access required"
                }
              }
            }
          },
          "404": {
            "description": "Category Not Found!",
            "content": {
              "application/json": {
                "example": {
                  "message": "Category Not Found!"
                }
              }
            }
          },
          "500": {
            "description": "Server error.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a category",
        "description": "Updates the title and href of a category by its ID. Requires admin privileges.",
        "tags": ["Admin Dashboard üìà"],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "description": "ID of the category to update",
            "schema": {
              "type": "string",
              "example": "60f7f0b8f1a2c3d4e5f67890"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Updated Category Title"
                  },
                  "href": {
                    "type": "string",
                    "example": "updated-category-url"
                  }
                },
                "required": ["title", "href"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category updated successfully.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Category Updated successfully",
                  "updateCategory": {
                    "_id": "60f7f0b8f1a2c3d4e5f67890",
                    "title": "Updated Category Title",
                    "href": "updated-category-url"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid category ID format.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Category ObjectId not valid !!"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Token not provided or invalid.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unauthorized !! - token Not Found"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin privileges required.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Forbidden - Admin access required"
                }
              }
            }
          },
          "404": {
            "description": "Category not found.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Category Not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },

    "/newsletter/": {
      "post": {
        "summary": "Add email to newsletter list",
        "description": "Add a new email to the newsletter list if it doesn't already exist.",
        "tags": ["Newsletter üì∞"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "example@example.com"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Email added to newsletter list successfully."
          },
          "403": {
            "description": "Email already exists in newsletter list."
          },
          "500": {
            "description": "Server error."
          }
        }
      },
      "get": {
        "summary": "Get all newsletter emails",
        "description": "Retrieve a list of all emails in the newsletter.",
        "tags": ["Admin Dashboard üìà"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of newsletter emails returned successfully."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden. Only admins can access this route."
          },
          "500": {
            "description": "Server error."
          }
        }
      }
    },

    "/cart/": {
      "post": {
        "summary": "Add a product to the user's cart",
        "description": "Add a specific product with its details to the shopping cart.",
        "tags": ["Cart üõí"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string",
                    "example": "6762e5867e70b51e0523f197",
                    "description": "The ID of the product to add."
                  },
                  "quantity": {
                    "type": "integer",
                    "example": 2,
                    "description": "The quantity of the product to add."
                  },
                  "color": {
                    "type": "string",
                    "example": "#FF5733",
                    "description": "HEX code for the color of the product (e.g., #FF5733)"
                  },
                  "size": {
                    "type": "string",
                    "example": "XL",
                    "description": "Size of the product (allowed values: S, M, L, XL, XXL, XS)"
                  }
                },
                "required": ["productId", "quantity", "color", "size"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product successfully added to the cart."
          },
          "400": {
            "description": "Invalid request or exceeded quantity limit.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized !! - token Not Found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized, Token expired or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized !! Token Expired"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User Or Product not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Show user's cart",
        "description": "Retrieve all products in the user's shopping cart.",
        "tags": ["Cart üõí"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the cart."
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized !! - token Not Found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Token expired or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized !! Token Expired"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No products found in the cart",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/cart/{itemId}": {
      "delete": {
        "tags": ["Cart üõí"],
        "summary": "Remove an item from the shopping cart",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "64df123abc45678def901234"
            },
            "description": "The ID of the item to be removed from the cart"
          }
        ],
        "responses": {
          "200": {
            "description": "Item successfully removed from the cart",
            "content": {
              "application/json": {
                "example": {
                  "message": "Product Removed From Cart"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized !! - token Not Found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized, Token expired or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized !! Token Expired"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Item not found or invalid ID",
            "content": {
              "application/json": {
                "example": {
                  "message": "Product Item Id Not Valid"
                }
              }
            }
          },
          "400": {
            "description": "Cart is empty",
            "content": {
              "application/json": {
                "example": {
                  "message": "Your Cart is Empty"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Cart üõí"],
        "summary": "Update the quantity of an item in the shopping cart",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "64df123abc45678def901234"
            },
            "description": "The ID of the item to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "example": 3,
                    "description": "The new quantity of the item (maximum: 5)"
                  }
                },
                "required": ["quantity"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Quantity successfully updated",
            "content": {
              "application/json": {
                "example": {
                  "message": "Your shopping cart has been updated",
                  "cart": {
                    "user": "64df123abc45678def901234",
                    "items": [
                      {
                        "product": "64df123abc45678def901234",
                        "quantity": 3,
                        "color": "#FF5733",
                        "size": "M"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized !! - token Not Found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized, Token expired or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized !! Token Expired"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Item not found or invalid ID",
            "content": {
              "application/json": {
                "example": {
                  "message": "Product Item Id Not Valid"
                }
              }
            }
          },
          "400": {
            "description": "Invalid quantity or cart is empty",
            "content": {
              "application/json": {
                "example": {
                  "message": "Your Cart is Empty"
                }
              }
            }
          }
        }
      }
    },

    "/": {
      "get": {
        "summary": "Get homepage products",
        "description": "Fetch 8 random products with optional user authentication.",
        "tags": ["Home üè°"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Optional Bearer token for user authentication"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of products"
          },
          "401": {
            "description": "Unauthorized - Token missing or invalid"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/slider/": {
      "post": {
        "summary": "Add a new slider",
        "description": "Add a new slider image with title and caption. Requires admin authentication.",
        "tags": ["Admin Dashboard üìà"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "caption": { "type": "string" },
                  "image": { "type": "string", "format": "binary" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Slider added successfully"
          },
          "401": {
            "description": "Unauthorized !! - token Not Found or Invalid"
          },
          "403": {
            "description": "Unauthorized, admin access required"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "summary": "Get slider information",
        "description": "Fetch all sliders without the version field",
        "tags": ["Home üè°"],
        "responses": {
          "200": {
            "description": "Sliders retrieved successfully"
          },
          "404": {
            "description": "Slider not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },

    "/concat/": {
      "post": {
        "summary": "Create a new contact message",
        "description": "Creates a new contact message with name, email, subject, and message. (Subject is a Optional Field)",
        "tags": ["Concat üì©"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "johndoe@example.com"
                  },
                  "subject": {
                    "type": "string",
                    "example": "Inquiry",
                    "required": false
                  },
                  "message": {
                    "type": "string",
                    "example": "I would like more information."
                  }
                },
                "required": ["name", "email", "message"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact message successfully sent.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Your Concat Message Sent"
                }
              }
            }
          },
          "400": {
            "description": "Validation error or bad request."
          },
          "500": {
            "description": "Server error."
          }
        }
      },
      "get": {
        "summary": "Retrieve all contact messages",
        "description": "Fetches all contact messages. Requires admin privileges.",
        "tags": ["Admin Dashboard üìà"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of all contact messages.",
            "content": {
              "application/json": {
                "example": {
                  "concats": [
                    {
                      "name": "Jane Doe",
                      "email": "janedoe@example.com",
                      "subject": "Feedback",
                      "message": "Great service!"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access."
          },
          "403": {
            "description": "Forbidden. Admin privileges required."
          },
          "500": {
            "description": "Server error."
          }
        }
      }
    },

    "/product/": {
      "post": {
        "tags": ["Admin Dashboard üìà"],
        "summary": "create new product",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "category": {
                    "type": "string",
                    "description": "The ID of the category (MongoDB ObjectId).",
                    "example": "64b2fc0c3c2c4e8f12a45678"
                  },
                  "price": {
                    "type": "Number",
                    "example": 22000000
                  },
                  "quantity": {
                    "type": "Number",
                    "example": 30
                  },
                  "size": {
                    "type": "array",
                    "enum": ["L", "XL", "XS"]
                  },
                  "discountPercent": {
                    "type": "Number",
                    "example": 5,
                    "Default": 0
                  },

                  "colors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Red"
                        },
                        "hexColorCode": {
                          "type": "string",
                          "example": "#FF0000"
                        }
                      },
                      "required": ["name", "hexColorCode"]
                    }
                  },

                  "attributes": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "description": "A key-value pair for attributes, value can be any type."
                    },
                    "description": "A map of attributes with key-value pairs.",
                    "example": {
                      "Filling Material": "foam",
                      "weight": "5.5"
                    }
                  },

                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product created successfully",
            "content": {
              "multipart/form-data": {
                "example": {
                  "message": "Product Created Successfully",
                  "newProduct": {
                    "name": "chair blue",
                    "description": "best chair",
                    "categoryId": "675988fecccbs76836e8b6e1",
                    "price": 12500000,
                    "discountPercent": 5,
                    "priceAfterDiscount": 11875000,
                    "quantity": 50,
                    "colors": [
                      {
                        "name": "green",
                        "hexColorCode": "#43a047",
                        "_id": "676c22eb7ef6f6160f166f9b"
                      },
                      {
                        "name": "blue",
                        "hexColorCode": "#1e88e5",
                        "_id": "676c22eb7ef6f6160f166f9c"
                      }
                    ],
                    "images": [
                      {
                        "hexColorCode": "#43a047",
                        "path": "/images/products/1735407033453.jpeg",
                        "_id": "676c22eb7ef645160f166f9d"
                      },
                      {
                        "hexColorCode": "#1e88e5",
                        "path": "/images/products/1735328408802.jpeg",
                        "_id": "676c22eb7ef6f4560f166f9e"
                      }
                    ],
                    "label": ["New", "Discount"],
                    "size": ["XL"],
                    "attributes": {
                      "Filling Material": "foam"
                    },
                    "_id": "676c22eb7ef6f6160f116f9a",
                    "createdAt": "2024-12-25T15:21:15.236Z",
                    "updatedAt": "2024-12-25T15:21:15.236Z",
                    "slug": "chair-blue-54840",
                    "rating": 3,
                    "__v": 0
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error or images not provided"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (Only admins)"
          },
          "404": {
            "description": "Category not found"
          }
        }
      },
      "get": {
        "summary": "Get all products",
        "tags": ["Products üì¶"],
        "description": "Fetch a list of products with optional filters",
        "operationId": "getAllProducts",
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "description": "Filter products by title",
            "required": false,
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filter products by category objectID",
            "required": false,
            "type": "string",
            "example": "675988fecccbf76836e8b6e1"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "type": "integer",
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of products per page",
            "required": false,
            "type": "integer",
            "default": 8
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "products": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": { "type": "string" },
                          "title": { "type": "string" },
                          "averageRating": { "type": "number" },
                          "isNewProduct": { "type": "boolean" },
                          "isFavorite": { "type": "boolean" }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": { "type": "integer" },
                        "limit": { "type": "integer" },
                        "totalItems": { "type": "integer" }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },

    "/product/{productId}": {
      "delete": {
        "summary": "Delete a product by ID",
        "tags": ["Admin Dashboard üìà"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the product to delete",
            "example": "64b2fc0c3c2c4e8f12a45678"
          }
        ],
        "responses": {
          "200": {
            "description": "Product and images removed successfully"
          },
          "400": {
            "description": "ProductId is not valid"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (Only admins)"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },

    "/product/{slug}": {
      "get": {
        "summary": "Get a product by slug",
        "tags": ["Products üì¶"],
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The slug of the product",
            "example": "chair-45325"
          }
        ],
        "responses": {
          "200": {
            "description": "Product retrieved successfully"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },

    "/product/favorites/": {
      "get": {
        "tags": ["Products üì¶"],
        "summary": "Get all favorite products for the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "type": "integer",
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of products per page",
            "required": false,
            "type": "integer",
            "default": 4
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the user's favorite products",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "data": {
                    "favorites": {
                      "_id": "64b1f7e9f9cde34e14f2d124",
                      "items": [
                        {
                          "_id": "64b1f7e9f9cde34e14f2d125",
                          "name": "Product 1",
                          "price": 100,
                          "discountPercent": 10,
                          "priceAfterDiscount": 90,
                          "description": "A brief description of the product",
                          "images": ["image1.jpg", "image2.jpg"],
                          "slug": "awesome-product",
                          "rating": 4.5,
                          "label": "New"
                        }
                      ],
                      "user": {
                        "_id": "64b1f7e9f9cde34e14f2d126",
                        "email": "user@example.com",
                        "fullname": "mehran"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "error": {
                    "message": "Unauthorized !! - token Not Found Or not Valid Format"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "error": {
                    "message": "Unauthorized !! -  Token Expired"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No favorite products found for the user",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "error": {
                    "message": "There is no product in your Favorite list!!"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "error": {
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },

    "/product/favorites/{productId}": {
      "post": {
        "tags": ["Products üì¶"],
        "summary": "Add a product to the user's favorite list",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "ID of the product to be added to the favorite list",
            "schema": {
              "type": "string",
              "example": "64b1f7e9f9cde34e14f2d124"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully added the product to the favorite list",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Product Add to Favorite List"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "error": {
                    "message": "Unauthorized !! - token Not Found Or not Valid Format"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "error": {
                    "message": "Unauthorized !! -  Token Expired"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "examples": {
                  "success": false,
                  "error": {
                    "message": "Product Not Found !!"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "error": {
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Products üì¶"],
        "summary": "Remove a product from the user's favorite list",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "ID of the product to be removed from the favorite list",
            "schema": {
              "type": "string",
              "example": "64b1f7e9f9cde34e14f2d124"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed the product from the favorite list",
            "content": {
              "application/json": {
                "example": {
                  "success": true,
                  "message": "Product Removed From Your Favorites"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "error": {
                    "message": "Unauthorized !! - token Not Found Or not Valid Format"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "error": {
                    "message": "Unauthorized !! -  Token Expired"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid product ID format",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "error": {
                    "message": "Product Id not Valid format!!"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "examples": {
                  "favoritesNotFound": {
                    "summary": "Favorites list not found",
                    "value": {
                      "success": false,
                      "error": {
                        "message": "There is no product in your Favorite list!!"
                      }
                    }
                  },
                  "productNotFound": {
                    "summary": "Product not in favorites",
                    "value": {
                      "success": false,
                      "error": {
                        "message": "This Product is not in your Favorite list !!"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "example": {
                  "success": false,
                  "error": {
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },

    "/product/search": {
      "post": {
        "summary": "Product Search",
        "tags": ["Products üì¶"],
        "description": "Search Product with title",
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "description": "Filter products by title",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "type": "integer",
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of products per page",
            "required": false,
            "type": "integer",
            "default": 4
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved products",
            "schema": {
              "type": "object",
              "properties": {
                "products": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": { "type": "string" },
                      "title": { "type": "string" },
                      "averageRating": { "type": "number" },
                      "quantity": { "type": "integer" },
                      "categoryId": { "type": "string" }
                    }
                  }
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "currentPage": { "type": "integer" },
                    "totalPages": { "type": "integer" },
                    "totalCount": { "type": "integer" },
                    "perPage": { "type": "integer" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The 'title' parameter is required for the search query.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "message": {
                      "type": "string",
                      "example": "The 'title' parameter is required for the search query."
                    }
                  }
                }
              }
            }
          },

          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  }
}
